name: CI/CD Pipeline for Titanic Model

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
  pull_request:
    branches:
      - main  # Trigger the workflow on PR to the main branch

jobs:
  # Linting job
  linting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint Python code
        run: |
          pip install pylint
          pylint train.py  # Lint your train.py file

  # Testing job (this can be expanded if you add actual tests later)
  testing:
    runs-on: ubuntu-latest
    needs: linting  # This job will run after linting

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Model Training and Tests
        run: |
          python train.py  # Run the training script to ensure everything works
          # Add additional tests if necessary, for example:
          # pytest tests/  # Run tests if you add test cases in the future

  # Deployment job (for example, deploying the model to a server or saving it)
  deployment:
    runs-on: ubuntu-latest
    needs: testing  # This job will run after testing

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Train Model and Save to Models Folder
        run: |
          python train.py  # Run the model training script
          echo "Model training completed successfully!"

      - name: Upload the trained model as an artifact (Optional)
        uses: actions/upload-artifact@v2
        with:
          name: titanic_model
          path: models/titanic_model.pkl  # Upload the saved model as artifact for later use
